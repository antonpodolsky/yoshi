(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{105:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var i=n(2),a=n(6),r=(n(0),n(214)),o={id:"migration-guide",title:"Migration from Legacy Flow",sidebar_label:"Migration Guide"},l={id:"version-4.x/library-flow/migration-guide",title:"Migration from Legacy Flow",description:"### Start from a clean slate",source:"@site/versioned_docs/version-4.x/library-flow/migration-guide.md",permalink:"/yoshi/docs/library-flow/migration-guide",editUrl:"https://github.com/wix/yoshi/edit/master/website/versioned_docs/version-4.x/library-flow/migration-guide.md",version:"4.x",lastUpdatedBy:"Ran Yitzhaki",lastUpdatedAt:1592243578,sidebar_label:"Migration Guide",sidebar:"version-4.x/library-flow",previous:{title:"Library Flow Configuration",permalink:"/yoshi/docs/library-flow/configuration"}},c=[{value:"Start from a clean slate",id:"start-from-a-clean-slate",children:[]},{value:"Remove yoshi and install the library flow instead",id:"remove-yoshi-and-install-the-library-flow-instead",children:[]},{value:"Replace <code>package.json</code> scripts",id:"replace-packagejson-scripts",children:[]},{value:"If you output a bundle, update your configuration",id:"if-you-output-a-bundle-update-your-configuration",children:[]},{value:"Install TypeScript if needed",id:"install-typescript-if-needed",children:[]},{value:"Verify that all of the source files are located in the <code>src</code> directory",id:"verify-that-all-of-the-source-files-are-located-in-the-src-directory",children:[]},{value:"Run the build command",id:"run-the-build-command",children:[]},{value:"Verify <code>main</code>, <code>module</code> &amp; <code>types</code> properties in <code>package.json</code>",id:"verify-main-module--types-properties-in-packagejson",children:[]},{value:"Verify that the tests are passing and that development mode is working",id:"verify-that-the-tests-are-passing-and-that-development-mode-is-working",children:[]},{value:"Make sure the <code>dist</code> directory will be published to <code>npm</code>",id:"make-sure-the-dist-directory-will-be-published-to-npm",children:[]},{value:"Verify updated version bump strategy",id:"verify-updated-version-bump-strategy",children:[]},{value:"Commit your changes and create a PR",id:"commit-your-changes-and-create-a-pr",children:[]}],s={rightToc:c};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(i.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h3",{id:"start-from-a-clean-slate"},"Start from a clean slate"),Object(r.b)("p",null,"Commit your current changes and open a new branch so we'll be ready to create a PR that includes the migration and nothing else."),Object(r.b)("p",null,"Remove all node_modules and lock files to ensure everything would be installed as expected"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"rm -rf node_modules package-lock.json yarn.lock\n")),Object(r.b)("h3",{id:"remove-yoshi-and-install-the-library-flow-instead"},"Remove yoshi and install the library flow instead"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"npm rm yoshi\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"npm i yoshi-flow-library --save-dev\n")),Object(r.b)("p",null,"You should see something like this in your ",Object(r.b)("inlineCode",{parentName:"p"},"package.json")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-diff"}),'- "yoshi": "^4.0.0"\n+ "yoshi-flow-library": "^4.0.0"\n')),Object(r.b)("h3",{id:"replace-packagejson-scripts"},"Replace ",Object(r.b)("inlineCode",{parentName:"h3"},"package.json")," scripts"),Object(r.b)("p",null,"Since the library flow has its own ",Object(r.b)("inlineCode",{parentName:"p"},"bin")," file we'll need to replace it in our ",Object(r.b)("inlineCode",{parentName:"p"},"npm scripts"),", you should see something that looks like that:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-diff"}),'-"build": ":",\n-"start": "yoshi start",\n-"test": "yoshi test",\n-"pretest": "yoshi build",\n-"posttest": "yoshi lint",\n+"build": "yoshi-library build",\n+"start": "yoshi-library start",\n+"test": "yoshi-library test",\n+"lint": "yoshi-library lint",\n+"posttest": "npm run lint",\n')),Object(r.b)("h3",{id:"if-you-output-a-bundle-update-your-configuration"},"If you output a bundle, update your configuration"),Object(r.b)("p",null,"Creating a ",Object(r.b)("inlineCode",{parentName:"p"},"umd")," bundle just got easier, see this ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/yoshi/docs/library-flow/configuration#bundle"}),"configuration")," and verify that you're using ",Object(r.b)("inlineCode",{parentName:"p"},"yoshiFlowLibrary.bundle")," option."),Object(r.b)("h3",{id:"install-typescript-if-needed"},"Install TypeScript if needed"),Object(r.b)("p",null,"The new library flow requires TypeScript (this is why) it will prompt you to install typescript as a dependency in case it's not the case, but you can do it in advance:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"npm install -D typescript\n")),Object(r.b)("p",null,"Until ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/wix/yoshi/issues/2562"}),"yoshi will be able to do that for you")," run the following command to generate ",Object(r.b)("inlineCode",{parentName:"p"},"tsconfig.json")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"npx tsc --init\n")),Object(r.b)("p",null,"In case you don't have any ",Object(r.b)("inlineCode",{parentName:"p"},"ts")," file in your project, add the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://www.typescriptlang.org/v2/en/tsconfig#allowJs"}),Object(r.b)("inlineCode",{parentName:"a"},"allowJs: true"))," option to your ",Object(r.b)("inlineCode",{parentName:"p"},"tsconfig.json"),"."),Object(r.b)("h3",{id:"verify-that-all-of-the-source-files-are-located-in-the-src-directory"},"Verify that all of the source files are located in the ",Object(r.b)("inlineCode",{parentName:"h3"},"src")," directory"),Object(r.b)("p",null,"If you have files in ",Object(r.b)("inlineCode",{parentName:"p"},"lib")," or anywhere else, move them to be under ",Object(r.b)("inlineCode",{parentName:"p"},"src")," which is the ",Object(r.b)("inlineCode",{parentName:"p"},"rootDir")," configured in the ",Object(r.b)("inlineCode",{parentName:"p"},"tsconfig.json"),". This also includes the tests."),Object(r.b)("p",null,"See ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/wix/yoshi/tree/master/packages/create-yoshi-app/templates/flow-library/typescript/src"}),"this example")," from the template used to generate new projects."),Object(r.b)("h3",{id:"run-the-build-command"},"Run the build command"),Object(r.b)("p",null,"The build command will verify that everything was configured properly and will also validate & modify your ",Object(r.b)("inlineCode",{parentName:"p"},"tsconfig.json")," file."),Object(r.b)("h3",{id:"verify-main-module--types-properties-in-packagejson"},"Verify ",Object(r.b)("inlineCode",{parentName:"h3"},"main"),", ",Object(r.b)("inlineCode",{parentName:"h3"},"module")," & ",Object(r.b)("inlineCode",{parentName:"h3"},"types")," properties in ",Object(r.b)("inlineCode",{parentName:"h3"},"package.json")),Object(r.b)("p",null,"Those properties are the files that will be loaded when ",Object(r.b)("inlineCode",{parentName:"p"},"NodeJS"),"/",Object(r.b)("inlineCode",{parentName:"p"},"Webpack"),"/",Object(r.b)("inlineCode",{parentName:"p"},"TypeScript")," will see an import/require to your module, those files should be located in your ",Object(r.b)("inlineCode",{parentName:"p"},"dist")," directory, while this example show ",Object(r.b)("inlineCode",{parentName:"p"},"index.js"),"/",Object(r.b)("inlineCode",{parentName:"p"},"index.d.ts")," in your case the entry file could be different."),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-diff"}),'+ "main": "dist/cjs/index.js",\n+ "module": "dist/esm/index.js",\n+ "types": "dist/types/index.d.ts",\n')),Object(r.b)("p",null,"Read more about the ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"/yoshi/docs/library-flow/overview#what-build-command-produces"}),"output of the library flow")),Object(r.b)("h3",{id:"verify-that-the-tests-are-passing-and-that-development-mode-is-working"},"Verify that the tests are passing and that development mode is working"),Object(r.b)("p",null,"This is a sanity test to verify that everything works as expected"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"npm start\n")),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{}),"npm test\n")),Object(r.b)("h3",{id:"make-sure-the-dist-directory-will-be-published-to-npm"},"Make sure the ",Object(r.b)("inlineCode",{parentName:"h3"},"dist")," directory will be published to ",Object(r.b)("inlineCode",{parentName:"h3"},"npm")),Object(r.b)("p",null,Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://docs.npmjs.com/files/package.json#files"}),"This configuration")," is important so the files will end up in ",Object(r.b)("inlineCode",{parentName:"p"},"npm"),". This is the minimum required configuration:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-diff"}),'+ "files": [\n+   "dist"\n+ ],\n')),Object(r.b)("h3",{id:"verify-updated-version-bump-strategy"},"Verify updated version bump strategy"),Object(r.b)("p",null,"yoshi-flow-library doesn't support the ",Object(r.b)("inlineCode",{parentName:"p"},"release")," command, as well as ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/wix/yoshi/pull/2069"}),"other new yoshi versions"),", instead, you can have a ",Object(r.b)("a",Object(i.a)({parentName:"p"},{href:"https://github.com/wix-private/wix-fed-scripts/pull/37"}),"versionBumpStrategy"),"."),Object(r.b)("p",null,"The needed change would look something like this:"),Object(r.b)("pre",null,Object(r.b)("code",Object(i.a)({parentName:"pre"},{className:"language-diff"}),'"scripts": {\n-   "release": "yoshi release"\n  },\n  "publishConfig": {\n    "registry": "https://registry.npmjs.org/",\n+   "versionBumpStrategy": "patch"\n  },\n')),Object(r.b)("h3",{id:"commit-your-changes-and-create-a-pr"},"Commit your changes and create a PR"),Object(r.b)("p",null,"That's it. \ud83d\udcab You're ready to use the new library flow!"),Object(r.b)("p",null,"\u260e\ufe0f Please let us know on ",Object(r.b)("inlineCode",{parentName:"p"},"#yoshi")," slack channel if the migration passed succesfully, and feel free to modify this article in case you've faced an issue that wasn't documentated here."))}p.isMDXComponent=!0},214:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var i=n(0),a=n.n(i);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),p=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l({},t,{},e)),n},d=function(e){var t=p(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=Object(i.forwardRef)((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=i,h=d["".concat(o,".").concat(u)]||d[u]||b[u]||r;return n?a.a.createElement(h,l({ref:t},s,{components:n})):a.a.createElement(h,l({ref:t},s))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);